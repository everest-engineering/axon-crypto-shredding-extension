plugins {
    id 'com.palantir.git-version' version '0.12.3'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'idea'
    id 'io.freefair.lombok' version '5.1.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java-library'
    id 'maven-publish'
    id 'org.sonarqube' version '3.1.1'
    id 'jacoco'
}

apply plugin: 'io.freefair.lombok'
apply plugin: 'jacoco'

group = 'engineering.everest.starterkit'
sourceCompatibility = '1.11'
version gitVersion()

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

lombok {
    version = '1.18.16'
    generateLombokConfig.enabled = false
}

ext {
    axonVersion = '4.4.5'
    guavaVersion = '30.0-jre'
    jacksonVersion = '2.11.2'
    springBootVersion = '2.4.0'

    h2Version = '1.4.200'
    junitVersion = '5.7.0'
    mockitoVersion = '3.5.15'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

dependencies {
    implementation "org.axonframework:axon-modelling:${axonVersion}"
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
    testImplementation 'org.springframework:spring-test'
    testRuntimeOnly "com.h2database:h2:${h2Version}"
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['maven']
    pkg {
        repo = 'starterkit'
        name = rootProject.name
        userOrg = 'everestengineering'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/everestengineering/starterkit-axon-crypto-shredding-extension'
    }
    publish = true
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

test.finalizedBy jacocoTestReport

sonarqube {
    properties {
        property 'sonar.projectKey', 'everest-engineering_axon-crypto-shredding-extension'
        property 'sonar.organization', 'everestengineering'
        property 'sonar.host.url', 'https://sonarcloud.io'
//        property 'sonar.exclusions', "*Test.java"
    }
}

tasks['sonarqube'].dependsOn test
